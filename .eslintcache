[{"E:\\@Interview tasks\\social-module\\src\\index.js":"1","E:\\@Interview tasks\\social-module\\src\\App.js":"2","E:\\@Interview tasks\\social-module\\src\\reducers\\index.js":"3","E:\\@Interview tasks\\social-module\\src\\reducers\\postsReducer.js":"4","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\index.js":"5","E:\\@Interview tasks\\social-module\\src\\actions\\types.js":"6","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\index.js":"7","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\posts\\index.js":"8","E:\\@Interview tasks\\social-module\\src\\actions\\postsActions.js":"9","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\text.js":"10","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\media.js":"11","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\select.js":"12"},{"size":382,"mtime":1607965007207,"results":"13","hashOfConfig":"14"},{"size":187,"mtime":1608026032713,"results":"15","hashOfConfig":"14"},{"size":151,"mtime":1607891655681,"results":"16","hashOfConfig":"14"},{"size":446,"mtime":1607965007207,"results":"17","hashOfConfig":"14"},{"size":474,"mtime":1608043344280,"results":"18","hashOfConfig":"14"},{"size":83,"mtime":1607897023666,"results":"19","hashOfConfig":"14"},{"size":2385,"mtime":1608038504142,"results":"20","hashOfConfig":"14"},{"size":2711,"mtime":1608042945327,"results":"21","hashOfConfig":"14"},{"size":273,"mtime":1607965007111,"results":"22","hashOfConfig":"14"},{"size":825,"mtime":1608043742040,"results":"23","hashOfConfig":"14"},{"size":2973,"mtime":1608043255711,"results":"24","hashOfConfig":"14"},{"size":1367,"mtime":1608043662534,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1l5oqi0",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},"E:\\@Interview tasks\\social-module\\src\\index.js",["60"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["61","62"],"E:\\@Interview tasks\\social-module\\src\\App.js",[],"E:\\@Interview tasks\\social-module\\src\\reducers\\index.js",[],"E:\\@Interview tasks\\social-module\\src\\reducers\\postsReducer.js",["63","64"],"import { FETCH_POSTS, NEW_POST } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  item: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  console.log(action.type,\"aaaa\")\r\n\r\n  switch (action.type) {\r\n\r\n    case NEW_POST:\r\n      console.log('hellooooo', action, state)\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\index.js",["65","66"],"import React, { Component } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport AddPost from \"./add_post\";\r\nimport Posts from \"./posts\";\r\nimport classes from \"./style.css\";\r\nexport default class mainModule extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <p className=\"main\">Social Module</p>\r\n        <div className=\"new\">\r\n          <AddPost />\r\n        </div>\r\n        <Posts />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\@Interview tasks\\social-module\\src\\actions\\types.js",[],"E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\index.js",["67","68"],"import React, { Component } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport Upload from \"./components/media\";\r\nimport Text from \"./components/text\";\r\nimport Select from \"./components/select\";\r\nimport { newPost } from \"../../../actions/postsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { get } from \"lodash\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nclass AddPost extends Component {\r\n  onSubmit = (values, { setSubmitting, resetForm }) => {\r\n    if (values) {\r\n      values = { ...values, created_at: new Date() };\r\n      this.props.NewPost(values);\r\n      resetForm({});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Formik\r\n          onSubmit={this.onSubmit}\r\n          enableReinitialize={true}\r\n          initialValues={{\r\n            text: \"\",\r\n            media: {},\r\n            tags: \"\",\r\n          }}\r\n        >\r\n          {({ submitForm, isSubmitting, resetForm, values }) => {\r\n            console.log(\r\n              !get(values, \"media.file\"),\r\n              \"vaaaaaaaaaa\",\r\n              !get(values, \"text\")\r\n            );\r\n            return (\r\n              <Form>\r\n                <Field component={Text} name=\"text\" label=\"Write Post\" />\r\n                <Field component={Upload} name=\"media\" />\r\n                <Field component={Select} name=\"category\" label=\"Category\" />\r\n                <Field component={Text} name=\"tags\" label=\"Tags\" />\r\n                <div className=\"btn-container\">\r\n                  <Button\r\n                    type=\"reset\"\r\n                    onClick={resetForm}\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Reset All\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!get(values, \"media.file\", values.text)}\r\n                    onClick={submitForm}\r\n                  >\r\n                    Post\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    NewPost: (post) => dispatch(newPost(post)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(AddPost);\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\posts\\index.js",["69","70","71"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sortBy, get, map, reject, toLower } from \"lodash\";\r\nimport \"../style.css\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nclass Posts extends Component {\r\n  state = {\r\n    text: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      text: event.target.value,\r\n    });\r\n  };\r\n  search = () => {\r\n    return this.props.posts.length != 0 ? (\r\n      <TextField\r\n        onChange={this.handleChange}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        placeholder=\"Search\"\r\n      ></TextField>\r\n    ) : (\r\n      <></>\r\n    );\r\n  };\r\n  getList = () => {\r\n    const { posts } = this.props;\r\n    const { text } = this.state;\r\n    console.log(text, \"ttttt\");\r\n    let recentPosts = sortBy(posts, (o) => o.created_at).reverse();\r\n    let filtered = toLower(text)\r\n      ? reject(recentPosts, (v) => {\r\n          // const c = toLowr(v.category);\r\n          return (\r\n            !toLower(get(v, \"category\")).includes(text) &&\r\n            !toLower(get(v, \"tags\")).includes(text)\r\n          );\r\n        })\r\n      : recentPosts;\r\n    return (\r\n      <div className=\"allPosts\">\r\n        {map(filtered, (\r\n          d,\r\n          i // return (\r\n        ) => (\r\n          <div key={i} className=\"postCont\">\r\n            <p className=\"p\">{get(d, \"text\", \"\")}</p>\r\n            {get(d.media, \"type\")?.includes(\"image\") && (\r\n              <img src={get(d.media, \"file\")} width=\"200\" height=\"200\" />\r\n            )}\r\n            {get(d.media, \"type\")?.includes(\"video\") && (\r\n              <video\r\n                key={get(d.media, \"name\")}\r\n                width=\"200\"\r\n                height=\"200\"\r\n                controls\r\n              >\r\n                <source src={get(d.media, \"file\")} type=\"video/mp4\" />\r\n              </video>\r\n            )}\r\n            <div className=\"info\">\r\n              <a href=\"#\" className=\"tags\">\r\n                {get(d, \"tags\")}\r\n              </a>\r\n              {get(d, \"category\") && (\r\n                <p className=\"cat\">Category: {get(d, \"category\")}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"posts\">\r\n        {this.search()}\r\n        {this.getList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Posts);\r\n","E:\\@Interview tasks\\social-module\\src\\actions\\postsActions.js",["72"],"import { FETCH_POSTS, NEW_POST } from \"./types\";\r\n// export const fetchPosts = () => (dispatch) => {\r\n//   dispatch({\r\n//     type: FETCH_POSTS,\r\n//     payload,\r\n//   });\r\n// };\r\nexport const newPost = (postData) => ({\r\n    type: NEW_POST,\r\n    payload: postData,\r\n  });\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\text.js",["73"],"import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./comstyle.css\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport { isEqual, get } from \"lodash\";\r\n\r\nexport default class Text extends Component {\r\n  handleChange = (event) => {\r\n    const { field } = this.props;\r\n    field.onChange({\r\n      target: {\r\n        name: field.name,\r\n        value: event.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"fieldcon\">\r\n        <p className=\"p\">{this.props.label}</p>\r\n        <StylesProvider injectFirst>\r\n          <TextField\r\n            onChange={this.handleChange}\r\n            variant=\"outlined\"\r\n            value={get(this.props, `field.value`)}\r\n          />\r\n        </StylesProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\media.js",["74","75"],"import { Input } from \"@material-ui/core\";\r\nimport { IconButton, Button } from \"@material-ui/core\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport React, { Component } from \"react\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\n\r\nimport \"../../style.css\";\r\nimport { get, isEmpty } from \"lodash\";\r\n\r\nexport default class AddPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: null,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { field } = this.props;\r\n\r\n    if (get(event.target.files, \"length\")) {\r\n      const fileData = {\r\n        file: URL.createObjectURL(event.target.files[0]),\r\n        name: event.target.files[0].name,\r\n        type: event.target.files[0].type,\r\n      };\r\n      field.onChange({\r\n        target: {\r\n          name: field.name,\r\n          value: fileData,\r\n        },\r\n      });\r\n      this.setState({ ...fileData });\r\n    }\r\n  };\r\n  remove = () => {\r\n    const { field } = this.props;\r\n    field.onChange({\r\n      target: {\r\n        name: field.name,\r\n        value: {},\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    const { field } = this.props;\r\n    console.log(field.value, \"fffffhhfhfhgfh\");\r\n    const src = get(this.props, `field.value.file`);\r\n    const clear = true;\r\n    return (\r\n      <div className=\"media\">\r\n        <input\r\n          style={{ display: \"none\" }}\r\n          // accept=\"image/*\"\r\n          //   className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          {/* <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<CloudUploadIcon />}\r\n        >\r\n          Upload\r\n        </Button> */}\r\n          <StylesProvider injectFirst>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </StylesProvider>\r\n        </label>\r\n        {field.value && (\r\n          <div style={{ display: \"flex\" }}>\r\n            {get(field.value, \"type\")?.includes(\"image\") && (\r\n              <img src={src} width=\"50%\" height=\"50%\" alt=\"\" />\r\n            )}\r\n            {get(field.value, \"type\")?.includes(\"video\") && (\r\n              <video\r\n                key={get(field.value, \"name\")}\r\n                width=\"80%\"\r\n                height=\"80%\"\r\n                controls\r\n              >\r\n                <source src={src} type=\"video/mp4\" />\r\n              </video>\r\n            )}\r\n            {!isEmpty(field.value) && (\r\n              <Button\r\n                type=\"button\"\r\n                onClick={this.remove}\r\n                color=\"primary\"\r\n                // variant=\"defaul\"\r\n              >\r\n                X\r\n              </Button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\select.js",["76"],"import React, { Component } from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\n\r\nimport \"./comstyle.css\";\r\n\r\nexport default class select extends Component {\r\n  handleChange = (event) => {\r\n    console.log(event.target.value, \"vvvvvvv\");\r\n    const { field } = this.props;\r\n    field.onChange({\r\n      target: {\r\n        name: field.name,\r\n        value: event.target.value,\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    const { field } = this.props;\r\n    return (\r\n      <div class=\"fieldcon\">\r\n        <p className=\"p\">{this.props.label}</p>\r\n\r\n        <FormControl variant=\"outlined\">\r\n          {/* <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel> */}\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={field.value || \"please\"}\r\n            onChange={this.handleChange}\r\n            autoWidth={true}\r\n          >\r\n            <MenuItem value={\"business\"}>Business</MenuItem>\r\n            <MenuItem value={\"social\"}>Social</MenuItem>\r\n            {/* <MenuItem value={30}>Thirty</MenuItem> */}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"77","severity":1,"message":"78","line":3,"column":23,"nodeType":"79","messageId":"80","endLine":3,"endColumn":38},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"77","severity":1,"message":"85","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":8,"column":1,"nodeType":"88","endLine":22,"endColumn":2},{"ruleId":"77","severity":1,"message":"89","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"77","severity":1,"message":"90","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":15},{"ruleId":"77","severity":1,"message":"91","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":19},{"ruleId":"77","severity":1,"message":"92","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":18,"column":36,"nodeType":"95","messageId":"96","endLine":18,"endColumn":38},{"ruleId":"97","severity":1,"message":"98","line":57,"column":15,"nodeType":"99","endLine":57,"endColumn":74},{"ruleId":"100","severity":1,"message":"101","line":70,"column":15,"nodeType":"99","endLine":70,"endColumn":44},{"ruleId":"77","severity":1,"message":"85","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":21},{"ruleId":"77","severity":1,"message":"102","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"103","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":15},{"ruleId":"77","severity":1,"message":"104","line":49,"column":11,"nodeType":"79","messageId":"80","endLine":49,"endColumn":16},{"ruleId":"77","severity":1,"message":"105","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":24},"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'FETCH_POSTS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Container' is defined but never used.","'classes' is defined but never used.","'TextField' is defined but never used.","'Alert' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'isEqual' is defined but never used.","'Input' is defined but never used.","'clear' is assigned a value but never used.","'StylesProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]