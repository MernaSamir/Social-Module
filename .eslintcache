[{"E:\\@Interview tasks\\social-module\\src\\index.js":"1","E:\\@Interview tasks\\social-module\\src\\App.js":"2","E:\\@Interview tasks\\social-module\\src\\reducers\\index.js":"3","E:\\@Interview tasks\\social-module\\src\\reducers\\postsReducer.js":"4","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\index.js":"5","E:\\@Interview tasks\\social-module\\src\\actions\\types.js":"6","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\index.js":"7","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\posts\\index.js":"8","E:\\@Interview tasks\\social-module\\src\\actions\\postsActions.js":"9","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\text.js":"10","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\media.js":"11","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\select.js":"12","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\multi_input.js":"13","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\old.js":"14"},{"size":382,"mtime":1607965007207,"results":"15","hashOfConfig":"16"},{"size":187,"mtime":1608026032713,"results":"17","hashOfConfig":"16"},{"size":151,"mtime":1607891655681,"results":"18","hashOfConfig":"16"},{"size":446,"mtime":1607965007207,"results":"19","hashOfConfig":"16"},{"size":474,"mtime":1608043344280,"results":"20","hashOfConfig":"16"},{"size":83,"mtime":1607897023666,"results":"21","hashOfConfig":"16"},{"size":2385,"mtime":1608038504142,"results":"22","hashOfConfig":"16"},{"size":2711,"mtime":1608042945327,"results":"23","hashOfConfig":"16"},{"size":273,"mtime":1607965007111,"results":"24","hashOfConfig":"16"},{"size":825,"mtime":1608043742040,"results":"25","hashOfConfig":"16"},{"size":2973,"mtime":1608043255711,"results":"26","hashOfConfig":"16"},{"size":1367,"mtime":1608043662534,"results":"27","hashOfConfig":"16"},{"size":2499,"mtime":1608003883650,"results":"28","hashOfConfig":"16"},{"size":2787,"mtime":1608000207453,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1l5oqi0",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"E:\\@Interview tasks\\social-module\\src\\index.js",["67"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["68","69"],"E:\\@Interview tasks\\social-module\\src\\App.js",[],"E:\\@Interview tasks\\social-module\\src\\reducers\\index.js",[],"E:\\@Interview tasks\\social-module\\src\\reducers\\postsReducer.js",["70","71"],"import { FETCH_POSTS, NEW_POST } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  item: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  console.log(action.type,\"aaaa\")\r\n\r\n  switch (action.type) {\r\n\r\n    case NEW_POST:\r\n      console.log('hellooooo', action, state)\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\index.js",["72","73"],"E:\\@Interview tasks\\social-module\\src\\actions\\types.js",[],"E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\index.js",["74","75"],"E:\\@Interview tasks\\social-module\\src\\components\\social_module\\posts\\index.js",["76","77","78"],"E:\\@Interview tasks\\social-module\\src\\actions\\postsActions.js",["79"],"import { FETCH_POSTS, NEW_POST } from \"./types\";\r\n// export const fetchPosts = () => (dispatch) => {\r\n//   dispatch({\r\n//     type: FETCH_POSTS,\r\n//     payload,\r\n//   });\r\n// };\r\nexport const newPost = (postData) => ({\r\n    type: NEW_POST,\r\n    payload: postData,\r\n  });\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\text.js",["80"],"import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./comstyle.css\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport { isEqual, get } from \"lodash\";\r\n\r\nexport default class Text extends Component {\r\n  handleChange = (event) => {\r\n    const { field } = this.props;\r\n    field.onChange({\r\n      target: {\r\n        name: field.name,\r\n        value: event.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"fieldcon\">\r\n        <p className=\"p\">{this.props.label}</p>\r\n        <StylesProvider injectFirst>\r\n          <TextField\r\n            onChange={this.handleChange}\r\n            variant=\"outlined\"\r\n            value={get(this.props, `field.value`)}\r\n          />\r\n        </StylesProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\media.js",["81","82"],"E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\select.js",["83"],"E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\multi_input.js",["84","85","86","87","88","89"],"import React, { Component } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nclass MultiInputs extends Component {\r\n  handelChange = (ev) => {\r\n    const { field, handleChange } = this.props;\r\n    console.log(ev.target.value, \"hohih\");\r\n    field.onChange({ target: { name: field.name, value: ev.target.value } });\r\n  };\r\n\r\n  onSubmit = (values, formProps) => {\r\n    console.log(\"hnaaaaa\", values);\r\n    // const {\r\n    //   field: { value: fValue, onChange, name },\r\n    //   extra,\r\n    // } = props;\r\n    // onChange({\r\n    //   target: { name, value: [...(fValue || []), { ...values, ...extra }] },\r\n    // });\r\n    // formProps.resetForm({});\r\n  };\r\n\r\n  removeItem = (index) => {\r\n    const {\r\n      field: { value: fValue, onChange, name },\r\n    } = this.props;\r\n    const val = fValue[index];\r\n    let vals = fValue.filter((_, i) => i != index);\r\n    if (val.id) {\r\n      vals = fValue.slice();\r\n      vals[index].remove = true;\r\n    }\r\n    onChange({ target: { name, value: vals } });\r\n  };\r\n\r\n  render() {\r\n    const { field, field_name, width, note_date, disabled } = this.props;\r\n    console.log(field.value, \"jjjjfiii\");\r\n    return (\r\n      <>\r\n        <div style={{ width: width }}>\r\n          <Formik onSubmit={this.onSubmit} enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n              <Form>\r\n                <Field name=\"tag\" onChange={this.handelChange}>\r\n                  {/* <input onChange={this.handelChange}></input> */}\r\n                </Field>\r\n                <button type=\"button\" onClick={submitForm}>\r\n                  +\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          {/* {this.renderField()}\r\n          <button onClick={this.props.handleSubmit} className={classes.onSubmitBtn}>+</button> */}\r\n        </div>\r\n        {/* <div>\r\n          {!disabled && (\r\n            <div>\r\n              {(field.value || []).map((d, k) => (\r\n                <>\r\n                  <div key={k} className={d.remove ? \"remove\" : \"\"}>\r\n                    <p>{get(d, field_name)}</p>\r\n                    <button\r\n                      onClick={this.removeItem.bind(this, k)}\r\n                      type=\"button\"\r\n                    >\r\n                      x\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiInputs;\r\n",["90","91"],"E:\\@Interview tasks\\social-module\\src\\components\\social_module\\add_post\\components\\old.js",["92","93","94","95","96","97"],"import React, { Component } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport classes from \"./style.less\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n// import moment from \"moment\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nclass MultiInputs extends Component {\r\n  state = {\r\n    tags: [],\r\n    clear: false,\r\n  };\r\n  handleChange = (event) => {\r\n    const { field } = this.props;\r\n    console.log(field, \"fffffffffff\");\r\n    field.onChange({\r\n      target: {\r\n        name: field.name,\r\n        value: event.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  addTag = () => {\r\n    const { field } = this.props;\r\n    this.setState({\r\n      tags: [...this.state.tags, field.value],\r\n      clear: true,\r\n    });\r\n    console.log(this.state.tags, \"hkjhjhjh\");\r\n\r\n    field.onChange({\r\n      target: {\r\n        name: field.name,\r\n        value: this.state.tags,\r\n      },\r\n    });\r\n  };\r\n\r\n  removeItem = (index) => {\r\n    const {\r\n      field: { value: fValue, onChange, name },\r\n    } = this.props;\r\n    const val = fValue[index];\r\n    let vals = fValue.filter((_, i) => i != index);\r\n    if (val.id) {\r\n      vals = fValue.slice();\r\n      vals[index].remove = true;\r\n    }\r\n    onChange({ target: { name, value: vals } });\r\n  };\r\n\r\n  //   renderField() {\r\n  //     const {text_validates, field, field_name, onClick = () => { }, numPad = true, text_label} = this.props;\r\n  //     return<TextField  />\r\n  //     // Render([{\r\n  //       type: 'TextBox',\r\n  //       name: field_name,\r\n  //       validates: text_validates,\r\n  //       numPad: numPad,\r\n  //       noLabel: text_label,\r\n  //     // }],\r\n  //     {onClick: onClick.bind(this, {...this.props, name: field_name + field.name}, this.handelChange.bind(this))})\r\n  //   }\r\n\r\n  render() {\r\n    const { field } = this.props;\r\n    console.log(field.value, \"jjjjfiii\");\r\n    return (\r\n      <>\r\n        <div>\r\n          <div>\r\n            <TextField onChange={this.handleChange} />\r\n            <button type=\"button\" onClick={this.addTag}>\r\n              +\r\n            </button>\r\n          </div>\r\n\r\n          {/* {this.renderField()} */}\r\n        </div>\r\n        <div>\r\n          {/* {field.value && (\r\n            <div className={classes.secDiv}>\r\n              {(field.value || []).map((d, k) => (\r\n                <>\r\n                  <div key={k} className={d.remove ? \"remove\" : \"\"}>\r\n                    <p>{get(d, field_name)}</p>\r\n                    <button\r\n                      onClick={this.removeItem.bind(this, k)}\r\n                      type=\"button\"\r\n                    >\r\n                      x\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ))}\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MultiInputs;\r\n",["98","99"],{"ruleId":"100","severity":1,"message":"101","line":3,"column":23,"nodeType":"102","messageId":"103","endLine":3,"endColumn":38},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"108","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":8,"column":1,"nodeType":"111","endLine":22,"endColumn":2},{"ruleId":"100","severity":1,"message":"112","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":19},{"ruleId":"100","severity":1,"message":"113","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":15},{"ruleId":"100","severity":1,"message":"114","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":19},{"ruleId":"100","severity":1,"message":"115","line":10,"column":8,"nodeType":"102","messageId":"103","endLine":10,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":18,"column":36,"nodeType":"118","messageId":"119","endLine":18,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":57,"column":15,"nodeType":"122","endLine":57,"endColumn":74},{"ruleId":"123","severity":1,"message":"124","line":70,"column":15,"nodeType":"122","endLine":70,"endColumn":44},{"ruleId":"100","severity":1,"message":"108","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":21},{"ruleId":"100","severity":1,"message":"125","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":17},{"ruleId":"100","severity":1,"message":"126","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":15},{"ruleId":"100","severity":1,"message":"127","line":49,"column":11,"nodeType":"102","messageId":"103","endLine":49,"endColumn":16},{"ruleId":"100","severity":1,"message":"128","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":24},{"ruleId":"100","severity":1,"message":"129","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"130","line":7,"column":20,"nodeType":"102","messageId":"103","endLine":7,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":29,"column":42,"nodeType":"118","messageId":"119","endLine":29,"endColumn":44},{"ruleId":"100","severity":1,"message":"131","line":38,"column":20,"nodeType":"102","messageId":"103","endLine":38,"endColumn":30},{"ruleId":"100","severity":1,"message":"132","line":38,"column":39,"nodeType":"102","messageId":"103","endLine":38,"endColumn":48},{"ruleId":"100","severity":1,"message":"133","line":38,"column":50,"nodeType":"102","messageId":"103","endLine":38,"endColumn":58},{"ruleId":"104","replacedBy":"134"},{"ruleId":"106","replacedBy":"135"},{"ruleId":"100","severity":1,"message":"129","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"113","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":15},{"ruleId":"100","severity":1,"message":"136","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"137","line":4,"column":18,"nodeType":"102","messageId":"103","endLine":4,"endColumn":22},{"ruleId":"100","severity":1,"message":"138","line":4,"column":24,"nodeType":"102","messageId":"103","endLine":4,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":45,"column":42,"nodeType":"118","messageId":"119","endLine":45,"endColumn":44},{"ruleId":"104","replacedBy":"139"},{"ruleId":"106","replacedBy":"140"},"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'FETCH_POSTS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Container' is defined but never used.","'classes' is defined but never used.","'TextField' is defined but never used.","'Alert' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'isEqual' is defined but never used.","'Input' is defined but never used.","'clear' is assigned a value but never used.","'StylesProvider' is defined but never used.","'get' is defined but never used.","'handleChange' is assigned a value but never used.","'field_name' is assigned a value but never used.","'note_date' is assigned a value but never used.","'disabled' is assigned a value but never used.",["141"],["142"],"'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.",["141"],["142"],"no-global-assign","no-unsafe-negation"]